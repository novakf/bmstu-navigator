{"version":3,"file":"static/js/6748.80762a3c.chunk.js","mappings":";gJAeA,MAAMA,EAAO,aAcb,GACEA,OACA,UAAMC,CAAIC,GAAsB,IAApB,cAAEC,GAAeD,EAC3B,MAAME,EAAYC,WAfWC,eAAgBF,GAC/C,IAAIG,EACJ,MAAMC,EAAOJ,EAAUK,UAAUC,KAAK,QACtC,IACEH,QAA0B,QAAO,KAADI,OAAaH,EAAI,OACnD,CAAE,MAAOI,GACPC,QAAQC,KAAK,wBAADH,OAAyBH,EAAI,UAAAG,OAASX,EAAI,kBACtDO,QAA0B,8BAC5B,CACAH,EAAUW,QAAQC,kBAAkBR,EAAMR,EAAMO,EAAkBU,QACpE,CAMUC,CAAyBd,GAC/B,MAAM,UAAEe,GAAcf,GAChB,IAAEgB,EAAG,OAAEC,GAAWF,EACxB,MAAO,CACLnB,KAAMI,EAAUW,QAAQO,EAAE,GAADX,OAAIX,EAAI,UACjCuB,QAAAA,GAEE,MAAMC,EAAiBC,SAASC,cAAc,YACxCC,EAAK,GAAAhB,OAAMX,EAAI,oBACrBwB,EAAeI,UAAS,gDAAAjB,OACagB,EAAK,kDAE1CP,EAAI,cAAcS,OAAOL,EAAeM,QAAQC,WAAU,IAC1DV,EAAOD,EAAI,gBAAgB,KACzBD,EAAUa,QAAQ,cAAc,GAEpC,EAGAC,SAAAA,GAEE,GAA4B,gBAAxBd,EAAUe,UAGZ,MAAO,CAAEC,SAAS,EAGtB,EAIAC,OAAAA,CAASC,GAEP,GAA4B,gBAAxBlB,EAAUe,UAA6B,CACzC,MAAMI,EAAOnB,EAAUoB,UAGjBC,EAAIH,EAAKI,QAAUH,EACnBI,EAAIL,EAAKM,QAAUL,EAGnBM,EAAOxC,EAAUW,QAAQO,EAAE,GAADX,OAAIX,EAAI,SAAS,CAAEwC,IAAGE,MAEtDG,MAAMD,EACR,CACF,EAEJ,mBChFF,IAAIE,EAAM,CACT,UAAW,CACV,KACA,MAED,UAAW,CACV,KACA,MAED,UAAW,CACV,KACA,MAED,UAAW,CACV,KACA,MAED,aAAc,CACb,KACA,OAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,KAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CAAC,IAIT,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,IAClCJ,EAAoBS,IAE7B,CACAX,EAAoBY,KAAO,IAAOC,OAAOD,KAAKb,GAC9CC,EAAoBW,GAAK,KACzBG,EAAOC,QAAUf","sources":["svgedit/editor/extensions/ext-helloworld/ext-helloworld.js","svgedit/editor/extensions/ext-helloworld/locale|lazy|/^/.//.*/.js$/|groupOptions: {}|namespace object"],"sourcesContent":["/**\n * @file ext-helloworld.js\n *\n * @license MIT\n *\n * @copyright 2010 Alexis Deveria\n *\n */\n\n/**\n* This is a very basic SVG-Edit extension. It adds a \"Hello World\" button in\n*  the left (\"mode\") panel. Clicking on the button, and then the canvas\n*  will show the user the point on the canvas that was clicked on.\n*/\n\nconst name = 'helloworld'\n\nconst loadExtensionTranslation = async function (svgEditor) {\n  let translationModule\n  const lang = svgEditor.configObj.pref('lang')\n  try {\n    translationModule = await import(`./locale/${lang}.js`)\n  } catch (_error) {\n    console.warn(`Missing translation (${lang}) for ${name} - using 'en'`)\n    translationModule = await import('./locale/en.js')\n  }\n  svgEditor.i18next.addResourceBundle(lang, name, translationModule.default)\n}\n\nexport default {\n  name,\n  async init ({ _importLocale }) {\n    const svgEditor = this\n    await loadExtensionTranslation(svgEditor)\n    const { svgCanvas } = svgEditor\n    const { $id, $click } = svgCanvas\n    return {\n      name: svgEditor.i18next.t(`${name}:name`),\n      callback () {\n        // Add the button and its handler(s)\n        const buttonTemplate = document.createElement('template')\n        const title = `${name}:buttons.0.title`\n        buttonTemplate.innerHTML = `\n        <se-button id=\"hello_world\" title=\"${title}\" src=\"hello_world.svg\"></se-button>\n        `\n        $id('tools_left').append(buttonTemplate.content.cloneNode(true))\n        $click($id('hello_world'), () => {\n          svgCanvas.setMode('hello_world')\n        })\n      },\n      // This is triggered when the main mouse button is pressed down\n      // on the editor canvas (not the tool panels)\n      mouseDown () {\n        // Check the mode on mousedown\n        if (svgCanvas.getMode() === 'hello_world') {\n          // The returned object must include \"started\" with\n          // a value of true in order for mouseUp to be triggered\n          return { started: true }\n        }\n        return undefined\n      },\n\n      // This is triggered from anywhere, but \"started\" must have been set\n      // to true (see above). Note that \"opts\" is an object with event info\n      mouseUp (opts) {\n        // Check the mode on mouseup\n        if (svgCanvas.getMode() === 'hello_world') {\n          const zoom = svgCanvas.getZoom()\n\n          // Get the actual coordinate by dividing by the zoom value\n          const x = opts.mouse_x / zoom\n          const y = opts.mouse_y / zoom\n\n          // We do our own formatting\n          const text = svgEditor.i18next.t(`${name}:text`, { x, y })\n          // Show the text using the custom alert function\n          alert(text)\n        }\n      }\n    }\n  }\n}\n","var map = {\n\t\"./en.js\": [\n\t\t3322,\n\t\t3322\n\t],\n\t\"./fr.js\": [\n\t\t8095,\n\t\t8095\n\t],\n\t\"./tr.js\": [\n\t\t1540,\n\t\t1540\n\t],\n\t\"./uk.js\": [\n\t\t7567,\n\t\t7567\n\t],\n\t\"./zh-CN.js\": [\n\t\t6431,\n\t\t6431\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 9442;\nmodule.exports = webpackAsyncContext;"],"names":["name","init","_ref","_importLocale","svgEditor","this","async","translationModule","lang","configObj","pref","concat","_error","console","warn","i18next","addResourceBundle","default","loadExtensionTranslation","svgCanvas","$id","$click","t","callback","buttonTemplate","document","createElement","title","innerHTML","append","content","cloneNode","setMode","mouseDown","getMode","started","mouseUp","opts","zoom","getZoom","x","mouse_x","y","mouse_y","text","alert","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports"],"sourceRoot":""}