{"version":3,"file":"static/js/5361.0d899606.chunk.js","mappings":"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","sources":["svgedit/editor/extensions/ext-grid/ext-grid.js","svgedit/editor/extensions/ext-grid/locale|lazy|/^/.//.*/.js$/|groupOptions: {}|namespace object"],"sourcesContent":["/**\n * @file ext-grid.js\n *\n * @license Apache-2.0\n *\n * @copyright 2010 Redou Mine, 2010 Alexis Deveria\n *\n */\n\nconst name = 'grid'\n\nconst loadExtensionTranslation = async function (svgEditor) {\n  let translationModule\n  const lang = svgEditor.configObj.pref('lang')\n  try {\n    translationModule = await import(`./locale/${lang}.js`)\n  } catch (_error) {\n    console.warn(`Missing translation (${lang}) for ${name} - using 'en'`)\n    translationModule = await import('./locale/en.js')\n  }\n  svgEditor.i18next.addResourceBundle(lang, name, translationModule.default)\n}\n\nexport default {\n  name,\n  async init () {\n    const svgEditor = this\n    await loadExtensionTranslation(svgEditor)\n    const { svgCanvas } = svgEditor\n    const { $id, $click, NS } = svgCanvas\n    const svgdoc = $id('svgcanvas').ownerDocument\n    const { assignAttributes } = svgCanvas\n    const hcanvas = document.createElement('canvas')\n    const canvBG = $id('canvasBackground')\n    const units = svgCanvas.getTypeMap() // Assumes prior `init()` call on `units.js` module\n    const intervals = [0.01, 0.1, 1, 10, 100, 1000]\n    let showGrid = svgEditor.configObj.curConfig.showGrid || false\n\n    hcanvas.style.display = 'none'\n    svgEditor.$svgEditor.appendChild(hcanvas)\n\n    const canvasGrid = svgdoc.createElementNS(NS.SVG, 'svg')\n    assignAttributes(canvasGrid, {\n      id: 'canvasGrid',\n      width: '100%',\n      height: '100%',\n      x: 0,\n      y: 0,\n      overflow: 'visible',\n      display: 'none'\n    })\n    canvBG.appendChild(canvasGrid)\n    const gridDefs = svgdoc.createElementNS(NS.SVG, 'defs')\n    // grid-pattern\n    const gridPattern = svgdoc.createElementNS(NS.SVG, 'pattern')\n    assignAttributes(gridPattern, {\n      id: 'gridpattern',\n      patternUnits: 'userSpaceOnUse',\n      x: 0, // -(value.strokeWidth / 2), // position for strokewidth\n      y: 0, // -(value.strokeWidth / 2), // position for strokewidth\n      width: 100,\n      height: 100\n    })\n\n    const gridimg = svgdoc.createElementNS(NS.SVG, 'image')\n    assignAttributes(gridimg, {\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 100\n    })\n    gridPattern.append(gridimg)\n    gridDefs.append(gridPattern)\n    $id('canvasGrid').appendChild(gridDefs)\n\n    // grid-box\n    const gridBox = svgdoc.createElementNS(NS.SVG, 'rect')\n    assignAttributes(gridBox, {\n      width: '100%',\n      height: '100%',\n      x: 0,\n      y: 0,\n      'stroke-width': 0,\n      stroke: 'none',\n      fill: 'url(#gridpattern)',\n      style: 'pointer-events: none; display:visible;'\n    })\n    $id('canvasGrid').appendChild(gridBox)\n\n    /**\n     *\n     * @param {Float} zoom\n     * @returns {void}\n     */\n    const updateGrid = (zoom) => {\n      // TODO: Try this with <line> elements, then compare performance difference\n      const unit = units[svgEditor.configObj.curConfig.baseUnit] // 1 = 1px\n      const uMulti = unit * zoom\n      // Calculate the main number interval\n      const rawM = 100 / uMulti\n      let multi = 1\n      intervals.some((num) => {\n        multi = num\n        return rawM <= num\n      })\n      const bigInt = multi * uMulti\n\n      // Set the canvas size to the width of the container\n      hcanvas.width = bigInt\n      hcanvas.height = bigInt\n      const ctx = hcanvas.getContext('2d')\n      const curD = 0.5\n      const part = bigInt / 10\n\n      ctx.globalAlpha = 0.2\n      ctx.strokeStyle = svgEditor.configObj.curConfig.gridColor\n      for (let i = 1; i < 10; i++) {\n        const subD = Math.round(part * i) + 0.5\n        // const lineNum = (i % 2)?12:10;\n        const lineNum = 0\n        ctx.moveTo(subD, bigInt)\n        ctx.lineTo(subD, lineNum)\n        ctx.moveTo(bigInt, subD)\n        ctx.lineTo(lineNum, subD)\n      }\n      ctx.stroke()\n      ctx.beginPath()\n      ctx.globalAlpha = 0.5\n      ctx.moveTo(curD, bigInt)\n      ctx.lineTo(curD, 0)\n\n      ctx.moveTo(bigInt, curD)\n      ctx.lineTo(0, curD)\n      ctx.stroke()\n\n      const datauri = hcanvas.toDataURL('image/png')\n      gridimg.setAttribute('width', bigInt)\n      gridimg.setAttribute('height', bigInt)\n      gridimg.parentNode.setAttribute('width', bigInt)\n      gridimg.parentNode.setAttribute('height', bigInt)\n      svgCanvas.setHref(gridimg, datauri)\n    }\n\n    /**\n     *\n     * @returns {void}\n     */\n    const gridUpdate = () => {\n      if (showGrid) {\n        updateGrid(svgCanvas.getZoom())\n      }\n      $id('canvasGrid').style.display = (showGrid) ? 'block' : 'none'\n      $id('view_grid').pressed = showGrid\n    }\n    return {\n      name: svgEditor.i18next.t(`${name}:name`),\n      zoomChanged (zoom) {\n        if (showGrid) { updateGrid(zoom) }\n      },\n      callback () {\n        // Add the button and its handler(s)\n        const buttonTemplate = document.createElement('template')\n        const title = `${name}:buttons.0.title`\n        buttonTemplate.innerHTML = `\n          <se-button id=\"view_grid\" title=\"${title}\" src=\"grid.svg\"></se-button>\n        `\n        $id('editor_panel').append(buttonTemplate.content.cloneNode(true))\n        $click($id('view_grid'), () => {\n          svgEditor.configObj.curConfig.showGrid = showGrid = !showGrid\n          gridUpdate()\n        })\n        if (showGrid) {\n          gridUpdate()\n        }\n      }\n    }\n  }\n}\n","var map = {\n\t\"./en.js\": [\n\t\t7504,\n\t\t7504\n\t],\n\t\"./fr.js\": [\n\t\t5604,\n\t\t5604\n\t],\n\t\"./sv.js\": [\n\t\t7350,\n\t\t7350\n\t],\n\t\"./tr.js\": [\n\t\t5214,\n\t\t5214\n\t],\n\t\"./uk.js\": [\n\t\t1668,\n\t\t1668\n\t],\n\t\"./zh-CN.js\": [\n\t\t7148,\n\t\t7148\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 8172;\nmodule.exports = webpackAsyncContext;"],"names":["name","init","svgEditor","this","async","translationModule","lang","configObj","pref","concat","_error","console","warn","i18next","addResourceBundle","default","loadExtensionTranslation","svgCanvas","$id","$click","NS","svgdoc","ownerDocument","assignAttributes","hcanvas","document","createElement","canvBG","units","getTypeMap","intervals","showGrid","curConfig","style","display","$svgEditor","appendChild","canvasGrid","createElementNS","SVG","id","width","height","x","y","overflow","gridDefs","gridPattern","patternUnits","gridimg","append","gridBox","stroke","fill","updateGrid","zoom","uMulti","baseUnit","rawM","multi","some","num","bigInt","ctx","getContext","curD","part","globalAlpha","strokeStyle","gridColor","i","subD","Math","round","lineNum","moveTo","lineTo","beginPath","datauri","toDataURL","setAttribute","parentNode","setHref","gridUpdate","getZoom","pressed","t","zoomChanged","callback","buttonTemplate","title","innerHTML","content","cloneNode","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","keys","Object","module","exports"],"sourceRoot":""}