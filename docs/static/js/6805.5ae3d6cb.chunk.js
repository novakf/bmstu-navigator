/*! For license information please see 6805.5ae3d6cb.chunk.js.LICENSE.txt */
(self.webpackChunkbmstu_navigator=self.webpackChunkbmstu_navigator||[]).push([[6805],{6805:(t,e,o)=>{"use strict";o.r(e),o.d(e,{default:()=>s});const n="polystar",s={name:n,async init(){const t=this,{svgCanvas:e}=t,{ChangeElementCommand:s}=e.history,i=t=>{e.undoMgr.addCommandToHistory(t)},{$id:a,$click:r}=e;let l,u,c;await async function(t){let e;const s=t.configObj.pref("lang");try{e=await o(4399)("./".concat(s,".js"))}catch(i){console.warn("Missing translation (".concat(s,") for ").concat(n," - using 'en'")),e=await o.e(3853).then(o.bind(o,3853))}t.i18next.addResourceBundle(s,n,e.default)}(t);const d=(t,e)=>{t?a("".concat(e,"_panel")).style.removeProperty("display"):a("".concat(e,"_panel")).style.display="none"},g=(t,o)=>{e.changeSelectedAttribute(t,o),e.call("changed",l)},p=t=>1/Math.tan(t),h=t=>1/Math.cos(t);return{name:t.i18next.t("".concat(n,":name")),callback(){const t="".concat(n,":title"),o="".concat(n,":buttons.0.title"),u="".concat(n,":buttons.1.title"),c='\n            <se-flyingbutton id="tools_polygon" title="'.concat(t,'">\n              <se-button id="tool_star" title="').concat(o,'" src="star.svg">\n              </se-button>\n              <se-button id="tool_polygon" title="').concat(u,'" src="polygon.svg">\n              </se-button>\n            </se-flyingbutton>\n          ');e.insertChildAtIndex(a("tools_left"),c,10),r(a("tool_star"),(()=>{this.leftPanel.updateLeftPanel("tool_star")&&(e.setMode("star"),d(!0,"star"),d(!1,"polygon"))})),r(a("tool_polygon"),(()=>{this.leftPanel.updateLeftPanel("tool_polygon")&&(e.setMode("polygon"),d(!0,"polygon"),d(!1,"star"))}));const b="".concat(n,":contextTools.0.label"),m="".concat(n,":contextTools.0.title"),f="".concat(n,":contextTools.1.label"),M="".concat(n,":contextTools.1.title"),y="".concat(n,":contextTools.2.label"),A="".concat(n,":contextTools.2.title"),v="".concat(n,":contextTools.3.label"),P="".concat(n,":contextTools.3.title"),I=document.createElement("template");I.innerHTML='\n          <div id="star_panel">\n            <se-spin-input id="starNumPoints" label="'.concat(b,'" min=1 step=1 value=5 title="').concat(m,'">\n            </se-spin-input>\n            <se-spin-input id="RadiusMultiplier" label="').concat(f,'" min=1 step=2.5 value=3 title="').concat(M,'">\n            </se-spin-input>\n            <se-spin-input id="radialShift" min=0 step=1 value=0 label="').concat(y,'" title="').concat(A,'">\n            </se-spin-input>\n          </div>\n          <div id="polygon_panel">\n            <se-spin-input size="3" id="polySides" min=1 step=1 value=5 label="').concat(v,'" title="').concat(P,'">\n            </se-spin-input>\n          </div>\n        '),a("tools_top").appendChild(I.content.cloneNode(!0)),d(!1,"star"),d(!1,"polygon"),a("starNumPoints").addEventListener("change",(t=>{g("point",t.target.value);const e=t.target.value;let o=l.length;for(;o--;){const t=l[o];if(t.hasAttribute("r")){const o=t.getAttribute("point"),n=t.getAttribute("points"),a=t.getAttribute("radialshift");let r=0,l=0;if(t.points){const u=t.points,c=u.numberOfItems;for(let t=0;t<c;++t){const e=u.getItem(t);r+=parseFloat(e.x),l+=parseFloat(e.y)}const d=r/c,g=l/c,p=Number(t.getAttribute("r")),h=p/t.getAttribute("starRadiusMultiplier");let b="";for(let t=0;e>=t;t++){let o=2*Math.PI*(t/e);o-=Math.PI/2;let n=p*Math.cos(o)+d,s=p*Math.sin(o)+g;b+=n+","+s+" ",isNaN(h)||(o=2*Math.PI*(t/e)+Math.PI/e,o-=Math.PI/2,o+=a,n=h*Math.cos(o)+d,s=h*Math.sin(o)+g,b+=n+","+s+" ")}t.setAttribute("points",b),i(new s(t,{point:o,points:n}))}}}})),a("RadiusMultiplier").addEventListener("change",(t=>{g("starRadiusMultiplier",t.target.value)})),a("radialShift").addEventListener("change",(t=>{g("radialshift",t.target.value)})),a("polySides").addEventListener("change",(t=>{g("sides",t.target.value);const e=t.target.value;let o=l.length;for(;o--;){const t=l[o];if(t.hasAttribute("edge")){const o=t.getAttribute("sides"),n=t.getAttribute("points");let a=0,r=0;if(t.points){const l=t.points,u=l.numberOfItems;for(let t=0;t<u;++t){const e=l.getItem(t);a+=parseFloat(e.x),r+=parseFloat(e.y)}const c=a/u,d=r/u,g=t.getAttribute("edge")/2*p(Math.PI/e)*h(Math.PI/e);let b="";for(let t=0;e>=t;t++){const o=2*Math.PI*t/e;b+=g*Math.cos(o)+c+","+(g*Math.sin(o)+d)+" "}t.setAttribute("points",b),i(new s(t,{sides:o,points:n}))}}}}))},mouseDown(t){if("star"===e.getMode()){const o=e.getColor("fill"),n=e.getColor("stroke"),s=e.getStrokeWidth();return u=!0,c=e.addSVGElementsFromJson({element:"polygon",attr:{cx:t.start_x,cy:t.start_y,id:e.getNextId(),shape:"star",point:a("starNumPoints").value,r:0,radialshift:a("radialShift").value,r2:0,orient:"point",fill:o,stroke:n,"stroke-width":s}}),{started:!0}}if("polygon"===e.getMode()){const o=e.getColor("fill"),n=e.getColor("stroke"),s=e.getStrokeWidth();return u=!0,c=e.addSVGElementsFromJson({element:"polygon",attr:{cx:t.start_x,cy:t.start_y,id:e.getNextId(),shape:"regularPoly",sides:a("polySides").value,orient:"x",edge:0,fill:o,stroke:n,"stroke-width":s}}),{started:!0}}},mouseMove(t){if(u){if("star"===e.getMode()){const e=Number(c.getAttribute("cx")),o=Number(c.getAttribute("cy")),n=Number(c.getAttribute("point")),s=c.getAttribute("orient"),i=c.getAttribute("fill"),a=c.getAttribute("stroke"),r=Number(c.getAttribute("stroke-width")),l=Number(c.getAttribute("radialshift"));let u=t.mouse_x,d=t.mouse_y;const g=Math.sqrt((u-e)*(u-e)+(d-o)*(d-o))/1.5,p=document.getElementById("RadiusMultiplier").value,h=g/p;c.setAttribute("r",g),c.setAttribute("r2",h),c.setAttribute("starRadiusMultiplier",p);let b="";for(let t=0;n>=t;t++){let i=2*Math.PI*(t/n);"point"===s?i-=Math.PI/2:"edge"===s&&(i=i+Math.PI/n-Math.PI/2),u=g*Math.cos(i)+e,d=g*Math.sin(i)+o,b+=u+","+d+" ",isNaN(h)||(i=2*Math.PI*(t/n)+Math.PI/n,"point"===s?i-=Math.PI/2:"edge"===s&&(i=i+Math.PI/n-Math.PI/2),i+=l,u=h*Math.cos(i)+e,d=h*Math.sin(i)+o,b+=u+","+d+" ")}return c.setAttribute("points",b),c.setAttribute("fill",i),c.setAttribute("stroke",a),c.setAttribute("stroke-width",r),c.getAttribute("shape"),{started:!0}}if("polygon"===e.getMode()){const e=Number(c.getAttribute("cx")),o=Number(c.getAttribute("cy")),n=Number(c.getAttribute("sides")),s=c.getAttribute("fill"),i=c.getAttribute("stroke"),a=Number(c.getAttribute("stroke-width"));let r=t.mouse_x,l=t.mouse_y;const u=Math.sqrt((r-e)*(r-e)+(l-o)*(l-o))/1.5;c.setAttribute("edge",u);const d=u/2*p(Math.PI/n)*h(Math.PI/n);let g="";for(let t=0;n>=t;t++){const s=2*Math.PI*t/n;r=d*Math.cos(s)+e,l=d*Math.sin(s)+o,g+=r+","+l+" "}return c.setAttribute("points",g),c.setAttribute("fill",s),c.setAttribute("stroke",i),c.setAttribute("stroke-width",a),{started:!0}}}},mouseUp(){if("star"===e.getMode()){return{keep:"0"!==c.getAttribute("r"),element:c}}if("polygon"===e.getMode()){return{keep:"0"!==c.getAttribute("edge"),element:c}}},selectedChanged(t){l=t.elems;let e=l.length;if(!e)return d(!1,"star"),void d(!1,"polygon");for(;e--;){const o=l[e];"star"===(null===o||void 0===o?void 0:o.getAttribute("shape"))?t.selectedElement&&!t.multiselected?(a("starNumPoints").value=o.getAttribute("point"),a("radialShift").value=o.getAttribute("radialshift"),d(!0,"star")):d(!1,"star"):"regularPoly"===(null===o||void 0===o?void 0:o.getAttribute("shape"))?t.selectedElement&&!t.multiselected?(a("polySides").value=o.getAttribute("sides"),d(!0,"polygon")):d(!1,"polygon"):(d(!1,"star"),d(!1,"polygon"))}}}}}},4399:(t,e,o)=>{var n={"./en.js":[3853,3853],"./fr.js":[1809,1809],"./sv.js":[6231,6231],"./tr.js":[6680,6680],"./uk.js":[4999,4999],"./zh-CN.js":[7477,7477]};function s(t){if(!o.o(n,t))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}));var e=n[t],s=e[0];return o.e(e[1]).then((()=>o(s)))}s.keys=()=>Object.keys(n),s.id=4399,t.exports=s}}]);
//# sourceMappingURL=6805.5ae3d6cb.chunk.js.map